name: Delete Ephemeral Environment on Merge

on:
  pull_request:
    branches:
      - main
    types: [closed] # triggers when the PR is closed or merged

jobs:
  cleanup:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your repository (so we have the Terraform code)
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Configure AWS Credentials (so Terraform can destroy resources)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # 3. Determine Branch Name
      #    e.g. if GITHUB_HEAD_REF = "feature/test", we convert to "feature-test"
      - name: Determine Branch Name
        id: get_branch
        run: |
          BRANCH_NAME=$(echo "$GITHUB_HEAD_REF" | tr '/' '-')
          echo "branch_name=$BRANCH_NAME" >> "$GITHUB_OUTPUT"

      # 4. Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      # 5. Terraform Destroy
      #    This removes all resources for the ephemeral environment (including Lambdas).
      - name: Destroy Ephemeral Environment
        run: |
          cd terraform
          terraform init
          terraform destroy -auto-approve -var="feature_name=${{ steps.get_branch.outputs.branch_name }}"
